#!/bin/bash

# Configuration
API_URL="https://127.0.0.1:8002"
EMAIL="test@example.com"
PASSWORD="test123"

# Couleurs pour les messages
GREEN='\033[0;32m'
RED='\033[0;31m'
NC='\033[0m'

echo "üîç Test du rafra√Æchissement du token JWT"
echo "--------------------------------------"

# √âtape 1: Authentification initiale
echo -e "\n${GREEN}√âtape 1:${NC} Authentification initiale"
AUTH_RESPONSE=$(curl -s -k -X POST "$API_URL/api/login_check" \
    -H "Content-Type: application/json" \
    -d "{\"email\":\"$EMAIL\",\"password\":\"$PASSWORD\"}")

TOKEN=$(echo $AUTH_RESPONSE | grep -o '"token":"[^"]*' | cut -d'"' -f4)
REFRESH_TOKEN=$(echo $AUTH_RESPONSE | grep -o '"refresh_token":"[^"]*' | cut -d'"' -f4)

if [ -z "$TOKEN" ] || [ -z "$REFRESH_TOKEN" ]; then
    echo "‚ùå Erreur d'authentification"
    echo "R√©ponse: $AUTH_RESPONSE"
    exit 1
else
    echo "‚úÖ Authentification r√©ussie"
    echo "Token JWT obtenu"
    echo "Refresh token obtenu"
fi

# √âtape 2: Test d'acc√®s √† une route prot√©g√©e avec le token initial
echo -e "\n${GREEN}√âtape 2:${NC} Test d'acc√®s avec le token initial"
RESPONSE=$(curl -s -k -H "Authorization: Bearer $TOKEN" "$API_URL/api/protected")
if [[ $RESPONSE == *"Vous avez acc"* ]]; then
    echo "‚úÖ Acc√®s r√©ussi avec le token initial"
else
    echo "‚ùå Erreur d'acc√®s avec le token initial"
    echo "R√©ponse: $RESPONSE"
fi

# √âtape 3: Rafra√Æchissement du token
echo -e "\n${GREEN}√âtape 3:${NC} Rafra√Æchissement du token"
REFRESH_RESPONSE=$(curl -s -k -X POST "$API_URL/api/token/refresh" \
    -H "Content-Type: application/json" \
    -d "{\"refresh_token\":\"$REFRESH_TOKEN\"}")

NEW_TOKEN=$(echo $REFRESH_RESPONSE | grep -o '"token":"[^"]*' | cut -d'"' -f4)

if [ -z "$NEW_TOKEN" ]; then
    echo "‚ùå Erreur lors du rafra√Æchissement du token"
    echo "R√©ponse: $REFRESH_RESPONSE"
    exit 1
elif [ "$NEW_TOKEN" = "$TOKEN" ]; then
    echo "‚ùå Erreur : le nouveau token est identique √† l'ancien"
    echo "R√©ponse: $REFRESH_RESPONSE"
    exit 1
else
    echo "‚úÖ Token rafra√Æchi avec succ√®s"
fi

# √âtape 4: Test d'acc√®s avec le nouveau token
echo -e "\n${GREEN}√âtape 4:${NC} Test d'acc√®s avec le nouveau token"
RESPONSE=$(curl -s -k -H "Authorization: Bearer $NEW_TOKEN" "$API_URL/api/protected")
if [[ $RESPONSE == *"Vous avez acc"* ]]; then
    echo "‚úÖ Acc√®s r√©ussi avec le nouveau token"
else
    echo "‚ùå Erreur d'acc√®s avec le nouveau token"
    echo "R√©ponse: $RESPONSE"
fi

# √âtape 5: Test d'acc√®s avec l'ancien token
echo -e "\n${GREEN}√âtape 5:${NC} Test d'acc√®s avec l'ancien token"
RESPONSE=$(curl -s -k -H "Authorization: Bearer $TOKEN" "$API_URL/api/protected")
if [[ $RESPONSE == *"Vous avez acc"* ]]; then
    echo "‚ö†Ô∏è  Attention : l'ancien token est toujours valide"
    echo "R√©ponse: $RESPONSE"
else
    echo "‚úÖ Acc√®s refus√© avec l'ancien token (comportement attendu)"
fi

echo -e "\n${GREEN}Tests termin√©s${NC}" 